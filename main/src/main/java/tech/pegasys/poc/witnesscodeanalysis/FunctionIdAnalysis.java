/*
 * Copyright ConsenSys AG.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
package tech.pegasys.poc.witnesscodeanalysis;

import org.apache.logging.log4j.Logger;
import org.apache.tuweni.bytes.Bytes;
import tech.pegasys.poc.witnesscodeanalysis.bytecodedump.ByteCodeDump;
import tech.pegasys.poc.witnesscodeanalysis.common.ContractData;
import tech.pegasys.poc.witnesscodeanalysis.processing.FunctionIdProcessing;
import tech.pegasys.poc.witnesscodeanalysis.processing.SimpleProcessing;

import java.io.IOException;

import static org.apache.logging.log4j.LogManager.getLogger;

public class FunctionIdAnalysis {
  private static final Logger LOG = getLogger();

  public static final String erc20 = "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b27b880414610030575b600080fd5b61004a60048036038101906100459190610156565b61004c565b005b60606000806000604051935036600085376000803686885af490503d9150816000853e806000811461007d57610093565b60008311156100925761012085019350836040525b5b5060008114156100ec578473ffffffffffffffffffffffffffffffffffffffff167f410d96db3f80b0f89b36888c4d8a94004268f8d42309ac39b7bcba706293e099856040516100e3919061021c565b60405180910390a25b5050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610123826100f8565b9050919050565b61013381610118565b811461013e57600080fd5b50565b6000813590506101508161012a565b92915050565b60006020828403121561016c5761016b6100f3565b5b600061017a84828501610141565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156101bd5780820151818401526020810190506101a2565b838111156101cc576000848401525b50505050565b6000601f19601f8301169050919050565b60006101ee82610183565b6101f8818561018e565b935061020881856020860161019f565b610211816101d2565b840191505092915050565b6000602082019050818103600083015261023681846101e3565b90509291505056fea2646970667358221220a912bed394bc886030fbe9972ff5be5f4ed7fa944598b8766ec8a711ad71c7f764736f6c63430008090033";
  public static final String imm = "0x608060405234801561001057600080fd5b506004361061018f5760003560e01c80638da5cb5b116100e4578063c5e4683a11610092578063c5e4683a14610328578063d41f17711461033b578063e0563ab114610362578063e30c39781461036b578063eeb499451461037c578063f2fde38b1461038f578063f3fe" +
          "f3a3146103a2578063f6451255146103b557600080fd5b80638da5cb5b146102a4578063947287cf146102b557806397e5230d146102be578063b1768065146102c8578063b68ad1e4146102ef578063c1225a2014610302578063c3b35a7e1461031557600080fd5b806354f8abad1161014157806354f8abad1461022057806355b01e4d146102335780635ea5df7914610241578063715018a61461025857806371cf93b71461026057806379ba5097146102735780637efab4f51461027b57600080fd5b806305dc2e8f1461019457806307b3e252146101c45780631459457a146101d25780631bc114ba146101e7578063284017f5146102005780633b878c221461020957806351351d5314610212575b600080fd5b60ca546101a7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101a76004600360981b0181565b6101e56101e036600461162f565b6103dc565b005b60c9546101a7906201000090046001600160a01b031681565b6101a761202081565b6101a761101081565b6101a76002600160a01b0381565b6101e561022e3660046116ae565b6104e0565b6101a76004600160991b0181565b61024a61138881565b6040519081526020016101bb565b6101e5610603565b60cb546101a7906001600160a01b031681565b6101e5610617565b6101a7610289366004611757565b60cd602052600090815260409020546001600160a01b031681565b6033546001600160a01b03166101a7565b61024a61520881565b61024a620249f081565b61024a7f7a8dc26796a1e50e6e190b70259f58f6a4edd5b22280ceecc82b687b8e98286981565b60cc546101a7906001600160a01b031681565b6101e561031036600461177b565b610691565b6101e5610323366004611798565b6106e0565b6101e561033636600461177b565b6106f8565b61024a7f87a7811f4bfedea3d341ad165680ae306b01aaeacc205d227629cf157dd9f82181565b6101a761203081565b6065546001600160a01b03166101a7565b6101e561038a3660046117d9565b61073f565b6101e561039d366004611757565b610913565b6101e56103b0366004611862565b610984565b61024a7f2cef46a936bdc5b7e6e8c71aa04560c41cf7d88bb26901a7e7f4936ff02accad81565b336002600160a01b031461040c5760405163973d02cb60e01b81526004016104039061188e565b60405180910390fd5b600054610100900460ff161580801561042c5750600054600160ff909116105b806104465750303b158015610446575060005460ff166001145b6104625760405162461bcd60e51b8152600401610403906118b2565b6000805460ff191660011790558015610485576000805461ff0019166101001790555b610492868686868661099b565b80156104d8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b336002600160a01b03146105075760405163973d02cb60e01b81526004016104039061188e565b600054610100900460ff16158080156105275750600054600160ff909116105b806105415750303b158015610541575060005460ff166001145b61055d5760405162461bcd60e51b8152600401610403906118b2565b6000805460ff191660011790558015610580576000805461ff0019166101001790555b61058d898989898961099b565b60c9805461ffff191685151561ff00191617610100851515021790556105b282610afe565b80156105f8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b61060b610b17565b6106156000610afe565b565b60655433906001600160a01b031681146106855760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608401610403565b61068e81610afe565b50565b610699610b17565b60c9805461ff0019166101008315159081029190911790915560405143907f61d574757cde41a357d030b39b2705796ccd699578037ab9a1cfd8117d82bf8690600090a350565b6106e8610b71565b6106f3838383610b79565b505050565b610700610b17565b60c9805460ff191682151590811790915560405143907fe0a0f0fa52db091cb71c202d80420311430ce1ae2e7794149877b6720ce8bf0b90600090a350565b60ca546001600160a01b031633146107aa5760405162461bcd60e51b815260206004820152602860248201527f4368696c6445524332305072656469636174653a204f4e4c595f53544154455f6044820152672922a1a2a4ab22a960c11b6064820152608401610403565b60cb546001600160a01b038481169116146108185760405162461bcd60e51b815260206004820152602860248201527f4368696c6445524332305072656469636174653a204f4e4c595f524f4f545f50604482015267524544494341544560c01b6064820152608401610403565b7f87a7811f4bfedea3d341ad165680ae306b01aaeacc205d227629cf157dd9f821610847602060008486611900565b6108509161192a565b0361086f5761086a6108658260208186611900565b610ef5565b61090d565b7f2cef46a936bdc5b7e6e8c71aa04560c41cf7d88bb26901a7e7f4936ff02accad61089e602060008486611900565b6108a79161192a565b036108b65761086a82826111a0565b60405162461bcd60e51b815260206004820152602660248201527f4368696c6445524332305072656469636174653a20494e56414c49445f5349476044820152654e415455524560d01b6064820152608401610403565b50505050565b61091b610b17565b606580546001600160a01b0383166001600160a01b0319909116811790915561094c6033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b61098c610b71565b610997823383610b79565b5050565b6001600160a01b038516158015906109bb57506001600160a01b03841615155b80156109cf57506001600160a01b03831615155b80156109e357506001600160a01b03821615155b610a3f5760405162461bcd60e51b815260206004820152602760248201527f4368696c6445524332305072656469636174653a204241445f494e495449414c60448201526624ad20aa24a7a760c91b6064820152608401610403565b60c9805462010000600160b01b031916620100006001600160a01b03888116919091029190911790915560ca80546001600160a01b03199081168784161790915560cb8054821686841617905560cc8054909116848316179055811615610af7576001600160a01b038116600081815260cd602052604080822080546001600160a01b03191661101090811790915590519092917f46bd56f98e1b14fd35691959270a6e1edf7cb8fcd489e0f9dda89e46c0d1ff0d91a35b5050505050565b606580546001600160a01b031916905561068e81611315565b6033546001600160a01b031633146106155760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610403565b610615611367565b826001600160a01b03163b600003610bdd5760405162461bcd60e51b815260206004820152602160248201527f4368696c6445524332305072656469636174653a204e4f545f434f4e545241436044820152601560fa1b6064820152608401610403565b6000836001600160a01b0316631f2d00656040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c419190611948565b6001600160a01b03818116600090815260cd6020526040902054919250858116911614610c805760405162461bcd60e51b815260040161040390611965565b6001600160a01b038116610c9657610c966119a8565b306001600160a01b0316846001600160a01b031663e61987056040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d029190611948565b6001600160a01b031614610d1857610d186119a8565b604051632770a7eb60e21b81526001600160a01b03851690639dc29fac90610d4690339086906004016119be565b6020604051808303816000875af1158015610d65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8991906119d7565b610dd55760405162461bcd60e51b815260206004820181905260248201527f4368696c6445524332305072656469636174653a204255524e5f4641494c45446044820152606401610403565b60c95460cb54604080517f7a8dc26796a1e50e6e190b70259f58f6a4edd5b22280ceecc82b687b8e98286960208201526001600160a01b0385811682840152336060830152878116608083015260a08083018890528351808403909101815260c08301938490526316f1983160e01b909352620100009094048416936316f1983193610e669391169160c401611a44565b600060405180830381600087803b158015610e8057600080fd5b505af1158015610e94573d6000803e3d6000fd5b50505050826001600160a01b0316846001600160a01b0316826001600160a01b03167fa0923f060a16fc784558d43de424ffde7b01643de5e5d335851b9df94c76bb273386604051610ee79291906119be565b60405180910390a450505050565b6000808080610f0685870187611a70565b6001600160a01b03808516600090815260cd602052604090205494985092965090945092501680610f495760405162461bcd60e51b815260040161040390611965565b806001600160a01b03163b600003610f6357610f636119a8565b6000816001600160a01b0316631f2d00656040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc79190611948565b9050856001600160a01b0316816001600160a01b031614610fea57610fea6119a8565b6001600160a01b038116611000576110006119a8565b306001600160a01b0316826001600160a01b031663e61987056040518163ffffffff1660e01b8152600401602060405180830381865afa158015611048573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106c9190611948565b6001600160a01b031614611082576110826119a8565b6040516340c10f1960e01b81526001600160a01b038316906340c10f19906110b090879087906004016119be565b6020604051808303816000875af11580156110cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f391906119d7565b61113f5760405162461bcd60e51b815260206004820181905260248201527f4368696c6445524332305072656469636174653a204d494e545f4641494c45446044820152606401610403565b836001600160a01b0316826001600160a01b0316876001600160a01b03167fdf34f3a3ed8bedc14a4b284ebaee5374d55b64bac6a84c270dabe8fd6b4cdafd888760405161118e9291906119be565b60405180910390a45050505050505050565b60008080806111b185870187611b64565b92975090955093509150506001600160a01b0384166111d2576111d26119a8565b6001600160a01b03848116600090815260cd602052604090205416156111fa576111fa6119a8565b60cc546040516bffffffffffffffffffffffff19606087901b16602082015260009161124a916001600160a01b03909116906034016040516020818303038152906040528051906020012061157d565b6001600160a01b03868116600090815260cd60205260409081902080546001600160a01b031916928416928317905551637b69774360e11b81529192509063f6d2ee86906112a2908890889088908890600401611bf1565b600060405180830381600087803b1580156112bc57600080fd5b505af11580156112d0573d6000803e3d6000fd5b50506040516001600160a01b038085169350881691507f46bd56f98e1b14fd35691959270a6e1edf7cb8fcd489e0f9dda89e46c0d1ff0d90600090a350505050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60c95460ff161561147257604080513360248083019190915282518083039091018152604490910182526020810180516001600160e01b031663d78bca6960e01b179052905160009182916004600160991b0191611388916113c99190611c3c565b6000604051808303818686fa925050503d8060008114611405576040519150601f19603f3d011682016040523d82523d6000602084013e61140a565b606091505b509150915081801561142f575060008180602001905181019061142d9190611c58565b115b61146f5760405162461bcd60e51b81526020600482015260116024820152702224a9a0a62627aba2a22fa9a2a72222a960791b6044820152606401610403565b50505b60c954610100900460ff161561061557604080513360248083019190915282518083039091018152604490910182526020810180516001600160e01b031663d78bca6960e01b179052905160009182916004600360981b0191611388916114d99190611c3c565b6000604051808303818686fa925050503d8060008114611515576040519150601f19603f3d011682016040523d82523d6000602084013e61151a565b606091505b509150915081801561154057508080602001905181019061153b9190611c58565b600114155b6109975760405162461bcd60e51b815260206004820152600e60248201526d212627a1a5a2a22fa9a2a72222a960911b6044820152606401610403565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166116145760405162461bcd60e51b8152602060048201526017602482015276115490cc4c4d8dce8818dc99585d194c8819985a5b1959604a1b6044820152606401610403565b92915050565b6001600160a01b038116811461068e57600080fd5b600080600080600060a0868803121561164757600080fd5b85356116528161161a565b945060208601356116628161161a565b935060408601356116728161161a565b925060608601356116828161161a565b915060808601356116928161161a565b809150509295509295909350565b801515811461068e57600080fd5b600080600080600080600080610100898b0312156116cb57600080fd5b88356116d68161161a565b975060208901356116e68161161a565b965060408901356116f68161161a565b955060608901356117068161161a565b945060808901356117168161161a565b935060a0890135611726816116a0565b925060c0890135611736816116a0565b915060e08901356117468161161a565b809150509295985092959890939650565b60006020828403121561176957600080fd5b81356117748161161a565b9392505050565b60006020828403121561178d57600080fd5b8135611774816116a0565b6000806000606084860312156117ad57600080fd5b83356117b88161161a565b925060208401356117c88161161a565b929592945050506040919091013590565b600080600080606085870312156117ef57600080fd5b8435935060208501356118018161161a565b9250604085013567ffffffffffffffff8082111561181e57600080fd5b818701915087601f83011261183257600080fd5b81358181111561184157600080fd5b88602082850101111561185357600080fd5b95989497505060200194505050565b6000806040838503121561187557600080fd5b82356118808161161a565b946020939093013593505050565b6020808252600a908201526914d654d5115350d0531360b21b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000808585111561191057600080fd5b8386111561191d57600080fd5b5050820193919092039150565b8035602083101561161457600019602084900360031b1b1692915050565b60006020828403121561195a57600080fd5b81516117748161161a565b60208082526023908201527f4368696c6445524332305072656469636174653a20554e4d41505045445f544f60408201526225a2a760e91b606082015260800190565b634e487b7160e01b600052600160045260246000fd5b6001600160a01b03929092168252602082015260400190565b6000602082840312156119e957600080fd5b8151611774816116a0565b60005b83811015611a0f5781810151838201526020016119f7565b50506000910152565b60008151808452611a308160208601602086016119f4565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090611a6890830184611a18565b949350505050565b60008060008060808587031215611a8657600080fd5b8435611a918161161a565b93506020850135611aa18161161a565b92506040850135611ab18161161a565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611ae857600080fd5b813567ffffffffffffffff80821115611b0357611b03611ac1565b604051601f8301601f19908116603f01168101908282118183101715611b2b57611b2b611ac1565b81604052838152866020858801011115611b4457600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a08688031215611b7c57600080fd5b853594506020860135611b8e8161161a565b9350604086013567ffffffffffffffff80821115611bab57600080fd5b611bb789838a01611ad7565b94506060880135915080821115611bcd57600080fd5b50611bda88828901611ad7565b925050608086013560ff8116811461169257600080fd5b6001600160a01b0385168152608060208201819052600090611c1590830186611a18565b8281036040840152611c278186611a18565b91505060ff8316606083015295945050505050565b60008251611c4e8184602087016119f4565b9190910192915050565b600060208284031215611c6a57600080fd5b505191905056fea264697066735822122070964a5f1f0ce072ba6f9611c0323c76ab53d72224db53a30055ffd26d485fc064736f6c63430008130033";



  public static boolean SIMPLE = true;
  public static boolean FUNCTIONID = true;

  private SimpleProcessing simpleProcessing;
  private FunctionIdProcessing functionIdProcessing;

  Bytes code;

  public FunctionIdAnalysis(Bytes code) throws IOException {
    this.code = code;
    this.simpleProcessing = new SimpleProcessing(true);
    this.functionIdProcessing = new FunctionIdProcessing(true);
  }





  public void analyse() throws Exception {
    ContractData contractData = new ContractData();
    contractData.setCode(this.code.toHexString());
    contractData.setContract_address(new String[]{"NONE"});
    process(1, contractData);
    closeAll();
  }


  public void dump() throws Exception {
    ByteCodeDump dump = new ByteCodeDump(this.code);
    dump.showBasicInfo();
    dump.dumpContract();
    closeAll();
  }


  public void process(int id, ContractData contractData) {
    Bytes code = Bytes.fromHexString(contractData.getCode());

    if (SIMPLE) {
      this.simpleProcessing.process(id, contractData.getContract_address(), code);
    }

    if (FUNCTIONID) {
      this.functionIdProcessing.process(id, contractData.getContract_address(), code);
    }
  }

  public void showSummary() {
    LOG.info("Summary");
    if (SIMPLE) {
      this.simpleProcessing.showSummary();
    }

    if (FUNCTIONID) {
      this.functionIdProcessing.showSummary();
    }


  }

  private void closeAll() throws IOException {
    this.simpleProcessing.close();
    this.functionIdProcessing.close();
  }




  public static void main(String[] args) throws Exception {
    Bytes code = Bytes.fromHexString(imm);
    //Bytes code = Bytes.fromHexString(erc20);

    FunctionIdAnalysis analysis = new FunctionIdAnalysis(code);

//    analysis.dump();
    analysis.analyse();
    analysis.showSummary();
  }

}
